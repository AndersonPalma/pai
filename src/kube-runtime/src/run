#!/bin/sh

# This script tries to behave like initd, will execute shell scripts under
# `/usr/local/pai/init`, main.sh will get a special treat: it will start after
# all other script and if main.sh exit this initd will kill all other processes in
# container.

INIT_DIR="/usr/local/pai/init"
PAI_LOG_DIR=/usr/local/pai/logs/attempt-${FC_FRAMEWORK_ATTEMPT_ID}/role-${FC_TASKROLE_NAME}/idx-${FC_TASK_INDEX}/attempt-${FC_TASK_ATTEMPT_ID}/

for i in `find $INIT_DIR/ -type f -regex ".*.sh"` ; do
  file_name=`basename $i`
  if [ $file_name = "main.sh" ] ; then
    echo "skip main.sh for now"
    continue
  else
    echo "starting ${file_name}"
    $i > ${PAI_LOG_DIR}/init_${file_name}.log 2>&1 &
  fi
done

echo "starting main.sh"
$INIT_DIR/main.sh > ${PAI_LOG_DIR}/main.sh.stdout 2> ${PAI_LOG_DIR}/main.sh.stderr &
MAIN_PID=$!

echo "wait for main"
wait $MAIN_PID
